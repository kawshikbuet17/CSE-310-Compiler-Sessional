.MODEL SMALL
.STACK 100H

.DATA
a DW '?'
b DW '?'
c DW '?'
t1 DW '?'
t10 DW '?'
t11 DW '?'
t12 DW '?'
t13 DW '?'
t14 DW '?'
t15 DW '?'
t16 DW '?'
t17 DW '?'
t18 DW '?'
t19 DW '?'
t2 DW '?'
t20 DW '?'
t21 DW '?'
t22 DW '?'
t23 DW '?'
t24 DW '?'
t25 DW '?'
t3 DW '?'
t4 DW '?'
t5 DW '?'
t6 DW '?'
t7 DW '?'
t8 DW '?'
t9 DW '?'


.CODE
logicop_1 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 5
MOV AX, 10
MOV AX, 5
MOV BX, 10
CMP AX, 0
JE L1
CMP BX, 0
JE L1
MOV AX, 1
MOV t1, AX
JMP L2
L1:
MOV AX, 0
MOV t1, AX
L2:
MOV AX, t1
CMP AX, 0
JE L6
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L7
L6:
MOV AX, 10
MOV AX, 0
MOV AX, 10
MOV BX, 0
CMP AX, 0
JE L3
CMP BX, 0
JE L3
MOV AX, 1
MOV t2, AX
JMP L4
L3:
MOV AX, 0
MOV t2, AX
L4:
MOV AX, t2
CMP AX, 0
JE L5
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
L5:
L7:
POP DX
POP CX
POP BX
POP AX
RET
logicop_1 ENDP
logicop_2 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, b
MOV BX, c
CMP AX, 0
JE L8
CMP BX, 0
JE L8
MOV AX, 1
MOV t3, AX
JMP L9
L8:
MOV AX, 0
MOV t3, AX
L9:
MOV a, AX
MOV AX, 0
MOV AX, a
MOV BX, 0
CMP AX, 0
JE L10
CMP BX, 0
JE L10
MOV AX, 1
MOV t4, AX
JMP L11
L10:
MOV AX, 0
MOV t4, AX
L11:
MOV AX, t4
CMP AX, 0
JE L16
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L17
L16:
MOV AX, 10
MOV AX, 10
MOV BX, a
CMP AX, 0
JE L12
CMP BX, 0
JE L12
MOV AX, 1
MOV t5, AX
JMP L13
L12:
MOV AX, 0
MOV t5, AX
L13:
MOV AX, t5
CMP AX, 0
JE L14
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L15
L14:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L15:
L17:
POP DX
POP CX
POP BX
POP AX
RET
logicop_2 ENDP
logicop_3 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 0
MOV AX, 1
MOV AX, 0
MOV BX, 1
CMP AX, 0
JE L18
CMP BX, 0
JE L18
MOV AX, 1
MOV t6, AX
JMP L19
L18:
MOV AX, 0
MOV t6, AX
L19:
MOV AX, t6
CMP AX, 0
JE L24
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L25
L24:
MOV AX, 10
MOV AX, 10
MOV AX, 10
MOV BX, 10
CMP AX, 0
JE L20
CMP BX, 0
JE L20
MOV AX, 1
MOV t7, AX
JMP L21
L20:
MOV AX, 0
MOV t7, AX
L21:
MOV AX, t7
CMP AX, 0
JE L22
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L23
L22:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L23:
L25:
POP DX
POP CX
POP BX
POP AX
RET
logicop_3 ENDP
logicop_4 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 1
MOV AX, a
MOV BX, 1
CMP AX, 0
JE L26
CMP BX, 0
JE L26
MOV AX, 1
MOV t8, AX
JMP L27
L26:
MOV AX, 0
MOV t8, AX
L27:
MOV AX, t8
CMP AX, 0
JE L32
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L33
L32:
MOV AX, 0
MOV AX, b
MOV BX, 0
CMP AX, 0
JE L28
CMP BX, 0
JE L28
MOV AX, 1
MOV t9, AX
JMP L29
L28:
MOV AX, 0
MOV t9, AX
L29:
MOV AX, t9
CMP AX, 0
JE L30
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L31
L30:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L31:
L33:
POP DX
POP CX
POP BX
POP AX
RET
logicop_4 ENDP
logicop_5 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 0
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 1
MOV AX, a
MOV BX, 1
CMP AX, 0
JE L34
CMP BX, 0
JE L34
MOV AX, 1
MOV t10, AX
JMP L35
L34:
MOV AX, 0
MOV t10, AX
L35:
MOV AX, t10
CMP AX, 0
JE L40
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L41
L40:
MOV AX, 10
MOV AX, b
MOV BX, 10
CMP AX, 0
JE L36
CMP BX, 0
JE L36
MOV AX, 1
MOV t11, AX
JMP L37
L36:
MOV AX, 0
MOV t11, AX
L37:
MOV AX, t11
CMP AX, 0
JE L38
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L39
L38:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L39:
L41:
POP DX
POP CX
POP BX
POP AX
RET
logicop_5 ENDP
logicop_6 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 5
MOV AX, 10
MOV AX, 5
MOV BX, 10
CMP AX, 0
JNE L42
CMP BX, 0
JNE L42
MOV AX, 0
MOV t12, AX
JMP L43
L42:
MOV t12, 1
L43:
MOV AX, t12
CMP AX, 0
JE L47
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L48
L47:
MOV AX, 10
MOV AX, 0
MOV AX, 10
MOV BX, 0
CMP AX, 0
JNE L44
CMP BX, 0
JNE L44
MOV AX, 0
MOV t13, AX
JMP L45
L44:
MOV t13, 1
L45:
MOV AX, t13
CMP AX, 0
JE L46
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
L46:
L48:
POP DX
POP CX
POP BX
POP AX
RET
logicop_6 ENDP
logicop_7 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 0
MOV AX, a
MOV BX, 0
CMP AX, 0
JNE L49
CMP BX, 0
JNE L49
MOV AX, 0
MOV t14, AX
JMP L50
L49:
MOV t14, 1
L50:
MOV AX, t14
CMP AX, 0
JE L55
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L56
L55:
MOV AX, 10
MOV AX, 10
MOV BX, a
CMP AX, 0
JNE L51
CMP BX, 0
JNE L51
MOV AX, 0
MOV t15, AX
JMP L52
L51:
MOV t15, 1
L52:
MOV AX, t15
CMP AX, 0
JE L53
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L54
L53:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L54:
L56:
POP DX
POP CX
POP BX
POP AX
RET
logicop_7 ENDP
logicop_8 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 11
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 0
MOV AX, 0
MOV AX, 0
MOV BX, 0
CMP AX, 0
JNE L57
CMP BX, 0
JNE L57
MOV AX, 0
MOV t16, AX
JMP L58
L57:
MOV t16, 1
L58:
MOV AX, t16
CMP AX, 0
JE L63
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L64
L63:
MOV AX, 10
MOV AX, 10
MOV AX, 10
MOV BX, 10
CMP AX, 0
JNE L59
CMP BX, 0
JNE L59
MOV AX, 0
MOV t17, AX
JMP L60
L59:
MOV t17, 1
L60:
MOV AX, t17
CMP AX, 0
JE L61
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L62
L61:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L62:
L64:
POP DX
POP CX
POP BX
POP AX
RET
logicop_8 ENDP
logicop_9 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 22
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 1
MOV AX, a
MOV BX, 1
CMP AX, 0
JNE L65
CMP BX, 0
JNE L65
MOV AX, 0
MOV t18, AX
JMP L66
L65:
MOV t18, 1
L66:
MOV AX, t18
CMP AX, 0
JE L71
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L72
L71:
MOV AX, 0
MOV AX, b
MOV BX, 0
CMP AX, 0
JNE L67
CMP BX, 0
JNE L67
MOV AX, 0
MOV t19, AX
JMP L68
L67:
MOV t19, 1
L68:
MOV AX, t19
CMP AX, 0
JE L69
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L70
L69:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L70:
L72:
POP DX
POP CX
POP BX
POP AX
RET
logicop_9 ENDP
logicop_10 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 0
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 1
MOV AX, a
MOV BX, 1
CMP AX, 0
JNE L73
CMP BX, 0
JNE L73
MOV AX, 0
MOV t20, AX
JMP L74
L73:
MOV t20, 1
L74:
MOV AX, t20
CMP AX, 0
JE L79
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L80
L79:
MOV AX, 10
MOV AX, b
MOV BX, 10
CMP AX, 0
JNE L75
CMP BX, 0
JNE L75
MOV AX, 0
MOV t21, AX
JMP L76
L75:
MOV t21, 1
L76:
MOV AX, t21
CMP AX, 0
JE L77
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L78
L77:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L78:
L80:
POP DX
POP CX
POP BX
POP AX
RET
logicop_10 ENDP
logicop_11 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 0
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 0
MOV AX, a
MOV BX, 0
CMP AX, 0
JNE L81
CMP BX, 0
JNE L81
MOV AX, 0
MOV t22, AX
JMP L82
L81:
MOV t22, 1
L82:
MOV AX, t22
CMP AX, 0
JE L87
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L88
L87:
MOV AX, 0
MOV AX, b
MOV BX, 0
CMP AX, 0
JNE L83
CMP BX, 0
JNE L83
MOV AX, 0
MOV t23, AX
JMP L84
L83:
MOV t23, 1
L84:
MOV AX, t23
CMP AX, 0
JE L85
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L86
L85:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L86:
L88:
POP DX
POP CX
POP BX
POP AX
RET
logicop_11 ENDP
logicop_12 PROC
PUSH AX
PUSH BX
PUSH CX
PUSH DX
MOV AX, 0
MOV a, AX
MOV AX, 0
MOV b, AX
MOV AX, 33
MOV c, AX
MOV AX, 0
MOV AX, 0
MOV BX, a
CMP AX, 0
JNE L89
CMP BX, 0
JNE L89
MOV AX, 0
MOV t24, AX
JMP L90
L89:
MOV t24, 1
L90:
MOV AX, t24
CMP AX, 0
JE L95
MOV AX, 1
MOV a, AX
MOV AX, a
CALL OUTDEC
JMP L96
L95:
MOV AX, 0
MOV AX, 0
MOV BX, b
CMP AX, 0
JNE L91
CMP BX, 0
JNE L91
MOV AX, 0
MOV t25, AX
JMP L92
L91:
MOV t25, 1
L92:
MOV AX, t25
CMP AX, 0
JE L93
MOV AX, 2
MOV b, AX
MOV AX, b
CALL OUTDEC
JMP L94
L93:
MOV AX, 3
MOV c, AX
MOV AX, c
CALL OUTDEC
L94:
L96:
POP DX
POP CX
POP BX
POP AX
RET
logicop_12 ENDP
main PROC
MOV AX, @DATA 
MOV DS, AX
CALL logicop_1
CALL logicop_2
CALL logicop_3
CALL logicop_4
CALL logicop_5
CALL logicop_6
CALL logicop_7
CALL logicop_8
CALL logicop_9
CALL logicop_10
CALL logicop_11
CALL logicop_12

MOV AH, 4CH
INT 21H
main ENDP
OUTDEC PROC

PUSH AX
PUSH BX
PUSH CX
PUSH DX
OR AX, AX
JGE @END_IF1

PUSH AX
MOV DL, '-'
MOV AH, 2
INT 21H
POP AX
NEG AX
@END_IF1:
XOR CX, CX
MOV BX, 10D
@REPEAT1:
XOR DX, DX
DIV BX
PUSH DX
INC CX
OR AX, AX
JNE @REPEAT1

MOV AH, 2
@PRINT_LOOP:
POP DX
OR DL, 30H
INT 21H
LOOP @PRINT_LOOP
POP DX
POP CX
POP BX
POP AX
RET
OUTDEC ENDP
END MAIN
